<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
        <relativePath />
    </parent>   

	<groupId>de.igormukhin.samples</groupId>
	<artifactId>spring-boot-org.acme.sample-jsf</artifactId>
	<version>0.0.1-SNAPSHOT</version>
    
	<packaging>war</packaging>


	<properties>
		<java.version>8</java.version>
        <tomcat.version>8.5.6</tomcat.version>
        <jsf-mojarra.version>2.2.11</jsf-mojarra.version>
        <primefaces.version>5.3</primefaces.version>
	</properties>

    <repositories>
        <repository>
            <id>primefaces</id>
            <name>PrimeFaces</name>
            <url>https://repository.primefaces.org/</url>
        </repository>
        <repository>
            <id>mvn-public</id>
            <name>MVNRepository</name>
            <url>http://mvnrepository.com</url>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/libs-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/libs-release-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
	
	<dependencies>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
        
        <!-- Explicitly define tomcat dependencies as provided to exclude them from war-file.
             But the war-file still stays executable as Spring Boot Plugin will keep
             provided dependencies under /WEB-INF/lib-provided  
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>
        <!-- Jasper is needed for Mojarra -->      
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>      
      
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.primefaces.themes/bootstrap-->
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>bootstrap</artifactId>
            <version>1.0.10</version>
        </dependency>

        <dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>${jsf-mojarra.version}</version>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
	</dependencies>
  
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- Eclipse: If Eclipse configured to refresh the workspace automatically,
                                  "mvn spring-boot:run" can fail in some rare cases.
                    -->
                    <addResources>false</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
	
</project>